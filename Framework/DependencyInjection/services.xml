<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="shopware.bundle.dir" type="constant">Shopware\Core\Framework\Framework::BUNDLE_DIR</parameter>
        <parameter key="shopware.slug.config" type="collection">
            <parameter key="regexp">/([^A-Za-z0-9\.]|-)+/</parameter>
            <parameter key="lowercase">false</parameter>
        </parameter>

        <!-- Migration config -->
        <parameter key="migration.directories" type="collection">
            <parameter key="Shopware\Core\Migration" type="string">%shopware.bundle.dir%/../Migration</parameter>
        </parameter>
        <parameter key="migration.active" type="collection"/>
    </parameters>

    <services>
        <service id="templating.loader.wrapped" alias="templating.loader"/>

        <!-- Database / Doctrine -->
        <service id="Doctrine\DBAL\Connection" public="true">
            <factory class="Shopware\Core\Kernel" method="getConnection"/>
        </service>

        <!-- Plugins -->
        <service class="Shopware\Core\Framework\Plugin\BundleCollection" id="Shopware\Core\Framework\Plugin\BundleCollection" public="true">
            <factory service="kernel" method="getPlugins"/>
        </service>

        <!-- Cache -->
        <service id="shopware.cache" alias="cache.app"/>

        <service class="Cocur\Slugify\Slugify" public="false" id="slugify">
            <argument>%shopware.slug.config%</argument>
        </service>

        <!--Event Listener -->
        <service class="Shopware\Core\Framework\Event\NestedEventDispatcher" id="Shopware\Core\Framework\Event\NestedEventDispatcher" decorates="event_dispatcher">
            <argument type="service" id="Shopware\Core\Framework\Event\NestedEventDispatcher.inner"/>
        </service>

        <!-- Pluginsystem -->
        <service class="Shopware\Core\Framework\Plugin\PluginManager" id="Shopware\Core\Framework\Plugin\PluginManager">
            <argument>%kernel.plugin_dir%</argument>
            <argument type="service" id="kernel"/>
            <argument type="service" id="Doctrine\DBAL\Connection"/>
            <argument type="service" id="service_container"/>
            <argument type="service" id="Shopware\Core\Framework\Plugin\RequirementValidator"/>
            <argument type="service" id="Shopware\Core\Framework\Migration\MigrationCollectionLoader"/>
            <argument type="service" id="Shopware\Core\Framework\Migration\MigrationCollection"/>
            <argument type="service" id="Shopware\Core\Framework\Migration\MigrationRuntime"/>
        </service>

        <service class="Shopware\Core\Framework\Plugin\XmlPluginInfoReader" id="Shopware\Core\Framework\Plugin\XmlPluginInfoReader"/>

        <service class="Shopware\Core\Framework\Plugin\RequirementValidator" id="Shopware\Core\Framework\Plugin\RequirementValidator">
            <argument type="service" id="Shopware\Core\Framework\Plugin\XmlPluginInfoReader"/>
        </service>

        <service class="Shopware\Core\Framework\Command\PluginUpdateCommand" id="Shopware\Core\Framework\Command\PluginUpdateCommand">
            <tag name="console.command"/>
            <argument type="service" id="Shopware\Core\Framework\Plugin\PluginManager"/>
        </service>

        <service class="Shopware\Core\Framework\Command\PluginInstallCommand" id="Shopware\Core\Framework\Command\PluginInstallCommand">
            <tag name="console.command"/>
            <argument type="service" id="Shopware\Core\Framework\Plugin\PluginManager"/>
        </service>

        <service class="Shopware\Core\Framework\Command\PluginActivateCommand" id="Shopware\Core\Framework\Command\PluginActivateCommand">
            <tag name="console.command"/>
            <argument type="service" id="Shopware\Core\Framework\Plugin\PluginManager"/>
        </service>

        <service class="Shopware\Core\Framework\Command\OrmValidateCommand" id="Shopware\Core\Framework\Command\OrmValidateCommand">
            <tag name="console.command"/>
            <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionValidator"/>
        </service>

        <service class="Shopware\Core\Framework\Command\PluginDeactivateCommand" id="Shopware\Core\Framework\Command\PluginDeactivateCommand">
            <tag name="console.command"/>
            <argument type="service" id="Shopware\Core\Framework\Plugin\PluginManager"/>
        </service>

        <service class="Shopware\Core\Framework\Command\PluginUninstallCommand" id="Shopware\Core\Framework\Command\PluginUninstallCommand">
            <tag name="console.command"/>
            <argument type="service" id="Shopware\Core\Framework\Plugin\PluginManager"/>
        </service>

        <service class="Shopware\Core\Framework\Command\PluginUpgradeCommand" id="Shopware\Core\Framework\Command\PluginUpgradeCommand">
            <tag name="console.command"/>
            <argument type="service" id="Shopware\Core\Framework\Plugin\PluginManager"/>
        </service>

        <service class="Shopware\Core\Framework\Command\PluginListCommand" id="Shopware\Core\Framework\Command\PluginListCommand">
            <tag name="console.command"/>
            <argument type="service" id="Shopware\Core\Framework\Plugin\PluginManager"/>
        </service>

        <service class="Shopware\Core\Framework\Command\DemodataCommand" id="Shopware\Core\Framework\Command\DemodataCommand">
            <tag name="console.command" command="framework:demodata"/>
            <argument>framework:demodata</argument>
            <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Write\EntityWriter"/>
            <argument type="service" id="Shopware\Core\Content\Product\Util\VariantGenerator"/>
            <argument type="service" id="service_container"/>
            <argument type="service" id="Shopware\Core\Checkout\Cart\Order\OrderConverter"/>
            <argument type="service" id="Doctrine\DBAL\Connection"/>
            <argument type="service" id="Shopware\Core\Checkout\Context\CheckoutContextFactory"/>
            <argument type="service" id="Shopware\Core\Checkout\Cart\Processor"/>
            <argument type="service" id="Shopware\Core\Content\Media\File\FileSaver"/>
        </service>

        <service class="Shopware\Core\Framework\Provisioning\TenantProvisioner" id="Shopware\Core\Framework\Provisioning\TenantProvisioner">
            <argument type="service" id="Doctrine\DBAL\Connection"/>
        </service>

        <service class="Shopware\Core\Framework\Provisioning\UserProvisioner" id="Shopware\Core\Framework\Provisioning\UserProvisioner">
            <argument type="service" id="Doctrine\DBAL\Connection"/>
        </service>

        <service class="Shopware\Core\Framework\Command\CreateTenantCommand" id="Shopware\Core\Framework\Command\CreateTenantCommand">
            <tag name="console.command" command="framework:create:tenant"/>
            <argument type="service" id="Shopware\Core\Framework\Provisioning\TenantProvisioner"/>
        </service>

        <!-- Migration -->
        <service class="Shopware\Core\Framework\Migration\MigrationRuntime" id="Shopware\Core\Framework\Migration\MigrationRuntime" public="true">
            <argument type="service" id="Doctrine\DBAL\Connection"/>
            <argument type="service" id="logger"/>
        </service>

        <service class="Shopware\Core\Framework\Migration\MigrationCollection" id="Shopware\Core\Framework\Migration\MigrationCollection" public="true">
            <argument>%migration.directories%</argument>
        </service>

        <service class="Shopware\Core\Framework\Migration\MigrationCollectionLoader" id="Shopware\Core\Framework\Migration\MigrationCollectionLoader" public="true">
            <argument type="service" id="Doctrine\DBAL\Connection"/>
            <argument type="service" id="Shopware\Core\Framework\Migration\MigrationCollection"/>
        </service>

        <service class="Shopware\Core\Framework\Command\CreateMigrationCommand" id="Shopware\Core\Framework\Command\CreateMigrationCommand">
            <tag name="console.command"/>
            <argument>%kernel.project_dir%</argument>
            <argument>%kernel.plugin_dir%</argument>
        </service>

        <service class="Shopware\Core\Framework\Command\MigrationCommand" id="Shopware\Core\Framework\Command\MigrationCommand">
            <tag name="console.command"/>
            <argument type="service" id="Shopware\Core\Framework\Migration\MigrationCollectionLoader"/>
            <argument type="service" id="Shopware\Core\Framework\Migration\MigrationRuntime"/>
        </service>

        <service class="Shopware\Core\Framework\Command\MigrationDestructiveCommand" id="shopware.core.framework.command.migration_destructive_command">
            <tag name="console.command"/>
            <argument type="service" id="Shopware\Core\Framework\Migration\MigrationCollectionLoader"/>
            <argument type="service" id="Shopware\Core\Framework\Migration\MigrationRuntime"/>
        </service>

        <service class="Shopware\Core\Framework\Command\DumpSchemaCommand" id="Shopware\Core\Framework\Command\DumpSchemaCommand">
            <tag name="console.command"/>
            <argument type="service" id="Shopware\Core\Framework\Api\ApiDefinition\DefinitionService"/>
        </service>

        <service class="Shopware\Core\Framework\Api\Controller\MigrationController" id="Shopware\Core\Framework\Api\Controller\MigrationController" public="true">
            <argument type="service" id="Shopware\Core\Framework\Migration\MigrationCollectionLoader"/>
            <argument type="service" id="Shopware\Core\Framework\Migration\MigrationRuntime"/>
        </service>

        <!-- Serializer -->
        <service class="Shopware\Core\Framework\Struct\Serializer\StructNormalizer" id="Shopware\Core\Framework\Struct\Serializer\StructNormalizer">
            <tag name="serializer.normalizer"/>
        </service>

        <service class="Shopware\Core\Framework\Struct\Serializer\StructDecoder" id="Shopware\Core\Framework\Struct\Serializer\StructDecoder">
            <tag name="serializer.encoder"/>
        </service>

        <!-- Routing -->
        <service class="Shopware\Core\Framework\Routing\SalesChannelSubscriber" id="Shopware\Core\Framework\Routing\SalesChannelSubscriber">
            <argument type="service" id="request_stack"/>
            <argument type="service" id="Shopware\Core\Framework\Routing\ApiRequestContextResolver"/>
            <tag name="kernel.event_subscriber"/>
        </service>

        <!-- Translation -->
        <service class="Shopware\Core\Framework\Translation\Translator" id="Shopware\Core\Framework\Translation\Translator" decorates="translator">
            <argument type="service" id="Shopware\Core\Framework\Translation\Translator.inner"/>
            <argument type="service" id="request_stack"/>
            <argument type="service" id="Doctrine\DBAL\Connection"/>
            <argument type="service" id="shopware.cache"/>
            <tag name="monolog.logger"/>
        </service>

        <service class="Shopware\Core\Framework\Translation\TranslatorCacheInvalidate" id="Shopware\Core\Framework\Translation\TranslatorCacheInvalidate">
            <argument type="service" id="shopware.cache"/>
            <tag name="kernel.event_subscriber"/>
        </service>

        <!-- Twig -->
        <service class="Shopware\Core\Framework\Twig\TemplateFinder" id="Shopware\Core\Framework\Twig\TemplateFinder" public="true">
            <argument type="service" id="twig.loader"/>
        </service>

        <service class="Shopware\Core\Framework\Twig\InheritanceExtension" id="Shopware\Core\Framework\Twig\InheritanceExtension">
            <tag name="twig.extension"/>

            <argument type="service" id="Shopware\Core\Framework\Twig\TemplateFinder"/>
        </service>

        <service class="Twig_Extensions_Extension_Intl" id="twig.extension.intl">
            <tag name="twig.extension"/>
        </service>

        <service class="Twig_Extensions_Extension_Text" id="twig.extension.text">
            <tag name="twig.extension"/>
        </service>

        <service class="Shopware\Core\Framework\Twig\InstanceOfExtension" id="Shopware\Core\Framework\Twig\InstanceOfExtension">
            <tag name="twig.extension"/>
        </service>

        <service class="Shopware\Core\Framework\Routing\ApiRequestContextResolver" id="Shopware\Core\Framework\Routing\ApiRequestContextResolver" >
            <argument type="service" id="Doctrine\DBAL\Connection"/>
        </service>

        <service class="Shopware\Core\Framework\Routing\SalesChannelRequestContextResolver"
                 id="Shopware\Core\Framework\Routing\SalesChannelRequestContextResolver"
                 decorates="Shopware\Core\Framework\Routing\ApiRequestContextResolver">

            <argument type="service" id="Shopware\Core\Framework\Routing\SalesChannelRequestContextResolver.inner"/>
            <argument type="service" id="Shopware\Core\Checkout\Context\CheckoutContextService"/>
        </service>

        <service class="Shopware\Core\Framework\Cli\CliContextSubscriber" id="Shopware\Core\Framework\Cli\CliContextSubscriber">
            <tag name="kernel.event_subscriber"/>
        </service>
    </services>
</container>
