<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="shopware.bundle.dir" type="constant">Shopware\Core\Framework\Framework::BUNDLE_DIR</parameter>
        <parameter key="shopware.slug.config" type="collection">
            <parameter key="regexp">/([^A-Za-z0-9\.]|-)+/</parameter>
            <parameter key="lowercase">false</parameter>
        </parameter>

        <!-- Migration config -->
        <parameter key="migration.directories" type="collection">
            <parameter key="Shopware\Core\Migration" type="string">%shopware.bundle.dir%/../Migration</parameter>
        </parameter>
        <parameter key="migration.active" type="collection"/>
    </parameters>

    <services>
        <service id="templating.loader.wrapped" alias="templating.loader"/>

        <!-- Database / Doctrine -->
        <service id="Doctrine\DBAL\Connection" public="true">
            <factory class="Shopware\Core\Kernel" method="getConnection"/>
        </service>

        <!-- Plugins -->
        <service id="Shopware\Core\Framework\Plugin\BundleCollection">
            <factory service="kernel" method="getPlugins"/>
        </service>

        <!-- Cache -->
        <service id="shopware.cache" class="Symfony\Component\Cache\Adapter\TagAwareAdapter" public="true">
            <argument type="service" id="cache.app" />
            <argument type="service" id="cache.app" />
        </service>

        <service class="Cocur\Slugify\Slugify" public="false" id="slugify">
            <argument>%shopware.slug.config%</argument>
        </service>

        <!--Event Listener -->
        <service id="Shopware\Core\Framework\Event\NestedEventDispatcher" decorates="event_dispatcher">
            <argument type="service" id="Shopware\Core\Framework\Event\NestedEventDispatcher.inner"/>
        </service>

        <service id="Shopware\Core\Framework\Command\DemodataCommand">
            <tag name="console.command"/>
            <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Write\EntityWriter"/>
            <argument type="service" id="Shopware\Core\Content\Product\Util\VariantGenerator"/>
            <argument type="service" id="Shopware\Core\Checkout\Cart\Order\OrderConverter"/>
            <argument type="service" id="Doctrine\DBAL\Connection"/>
            <argument type="service" id="Shopware\Core\Checkout\Context\CheckoutContextFactory"/>
            <argument type="service" id="Shopware\Core\Content\Media\File\FileSaver"/>
            <argument type="service" id="product.repository"/>
            <argument type="service" id="rule.repository"/>
            <argument type="service" id="category.repository"/>
            <argument type="service" id="tax.repository"/>
            <argument type="service" id="customer_group.repository"/>
            <argument type="service" id="shipping_method_price.repository"/>
            <argument type="service" id="Shopware\Core\Checkout\Cart\Storefront\CartService"/>
            <argument type="service" id="media_default_folder.repository"/>
            <argument type="service" id="configuration_group.repository"/>
            <argument type="service" id="product_stream.repository"/>
            <argument type="service" id="Shopware\Core\Content\Media\File\FileNameProvider"/>
            <argument>%kernel.environment%</argument>
            <argument>%kernel.project_dir%</argument>
        </service>

        <service id="Shopware\Core\Framework\Provisioning\UserProvisioner">
            <argument type="service" id="Doctrine\DBAL\Connection"/>
        </service>

        <service id="Shopware\Core\Framework\Command\FeatureFlagCreateCommand">
            <tag name="console.command" command="feature:add"/>
            <argument type="service" id="Shopware\Core\Framework\FeatureFlag\FeatureFlagGenerator"/>
        </service>

        <!-- Migration -->
        <service id="Shopware\Core\Framework\Migration\MigrationRuntime">
            <argument type="service" id="Doctrine\DBAL\Connection"/>
            <argument type="service" id="logger"/>
        </service>

        <service id="Shopware\Core\Framework\Migration\MigrationCollection">
            <argument>%migration.directories%</argument>
        </service>

        <service id="Shopware\Core\Framework\Migration\MigrationCollectionLoader">
            <argument type="service" id="Doctrine\DBAL\Connection"/>
            <argument type="service" id="Shopware\Core\Framework\Migration\MigrationCollection"/>
        </service>

        <service id="Shopware\Core\Framework\Command\CreateMigrationCommand">
            <tag name="console.command"/>
            <argument>%kernel.project_dir%</argument>
            <argument>%kernel.plugin_dir%</argument>
        </service>

        <service id="Shopware\Core\Framework\Command\RefreshMigrationCommand">
            <tag name="console.command"/>
        </service>

        <service id="Shopware\Core\Framework\Command\MigrationCommand">
            <tag name="console.command"/>
            <argument type="service" id="Shopware\Core\Framework\Migration\MigrationCollectionLoader"/>
            <argument type="service" id="Shopware\Core\Framework\Migration\MigrationRuntime"/>
        </service>

        <service id="Shopware\Core\Framework\Command\MigrationDestructiveCommand">
            <tag name="console.command"/>
            <argument type="service" id="Shopware\Core\Framework\Migration\MigrationCollectionLoader"/>
            <argument type="service" id="Shopware\Core\Framework\Migration\MigrationRuntime"/>
        </service>

        <service id="Shopware\Core\Framework\Command\DumpSchemaCommand">
            <tag name="console.command"/>
            <argument type="service" id="Shopware\Core\Framework\Api\ApiDefinition\DefinitionService"/>
        </service>

        <service id="Shopware\Core\Framework\Api\Controller\MigrationController" public="true">
            <argument type="service" id="Shopware\Core\Framework\Migration\MigrationCollectionLoader"/>
            <argument type="service" id="Shopware\Core\Framework\Migration\MigrationRuntime"/>
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <!-- Framework -->
        <service id="Shopware\Storefront\Framework\Command\CreatePageletCommand">
            <tag name="console.command"/>
            <argument>%kernel.project_dir%</argument>
        </service>

        <service id="Shopware\Storefront\Framework\Command\CreatePageCommand">
            <tag name="console.command"/>
            <argument>%kernel.project_dir%</argument>
        </service>

        <!-- Serializer -->
        <service id="Shopware\Core\Framework\Struct\Serializer\StructNormalizer">
            <tag name="serializer.normalizer"/>
        </service>

        <service id="Shopware\Core\Framework\Struct\Serializer\StructDecoder">
            <tag name="serializer.encoder"/>
        </service>

        <!-- Routing -->
        <service id="Shopware\Core\Framework\Routing\SalesChannelSubscriber">
            <argument type="service" id="request_stack"/>
            <argument type="service" id="Shopware\Core\Framework\Routing\ApiRequestContextResolver"/>
            <tag name="kernel.event_subscriber"/>
        </service>

        <!-- Translation -->
        <service id="Shopware\Core\Framework\Translation\Translator"
                 decorates="translator">
            <argument type="service" id="Shopware\Core\Framework\Translation\Translator.inner"/>
            <argument type="service" id="request_stack"/>
            <argument type="service" id="shopware.cache"/>
            <argument type="service" id="translator.formatter"/>
            <argument type="service" id="Shopware\Core\Framework\Snippet\Services\SnippetService"/>
            <tag name="monolog.logger"/>
        </service>

        <service id="Shopware\Core\Framework\Translation\TranslatorCacheInvalidate">
            <argument type="service" id="shopware.cache"/>
            <argument type="service" id="Doctrine\DBAL\Connection"/>
            <tag name="kernel.event_subscriber"/>
        </service>

        <service id="Shopware\Core\Framework\Snippet\Services\SnippetFlattener" public="true"/>

        <service id="Shopware\Core\Framework\Snippet\Files\LanguageFileCollection" public="true">
            <argument type="tagged" tag="shopware.language.file"/>
        </service>

        <service id="Shopware\Core\Framework\Snippet\Services\SnippetFileConverter" public="true">
            <argument type="service" id="Shopware\Core\Framework\Snippet\Files\LanguageFileCollection"/>
            <argument type="service" id="Shopware\Core\Framework\Snippet\Services\SnippetFlattener"/>
        </service>

        <service id="Shopware\Core\Framework\Snippet\Services\SnippetService" public="true">
            <argument type="service" id="Doctrine\DBAL\Connection"/>
            <argument type="service" id="Shopware\Core\Framework\Snippet\Services\SnippetFlattener"/>
            <argument type="service" id="Shopware\Core\Framework\Snippet\Files\LanguageFileCollection"/>
            <argument type="service" id="snippet.repository"/>
        </service>

        <service id="Shopware\Core\Framework\Snippet\Api\SnippetController" public="true">
            <argument type="service" id="Shopware\Core\Framework\Snippet\Services\SnippetService"/>
            <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\RequestCriteriaBuilder"/>
            <argument type="service" id="user.repository"/>
        </service>

        <!--LanguageFiles-->
        <service id="Shopware\Core\Framework\Snippet\Files\de_DE\LanguageFile_de_DE" public="true">
            <tag name="shopware.language.file" priority="100"/>
        </service>

        <service id="Shopware\Core\Framework\Snippet\Files\en_EN\LanguageFile_en_GB" public="true">
            <tag name="shopware.language.file" priority="100"/>
        </service>

        <!-- Twig -->
        <service id="Shopware\Core\Framework\Twig\TemplateFinder" public="true">
            <argument type="service" id="twig.loader"/>
        </service>

        <service id="Shopware\Core\Framework\Twig\InheritanceExtension">
            <tag name="twig.extension"/>
            <argument type="service" id="Shopware\Core\Framework\Twig\TemplateFinder"/>
        </service>

        <service id="Shopware\Core\Framework\Twig\FeatureFlagExtension">
            <tag name="twig.extension"/>
        </service>

        <service class="Twig_Extensions_Extension_Intl" id="twig.extension.intl">
            <tag name="twig.extension"/>
        </service>

        <service class="Twig_Extensions_Extension_Text" id="twig.extension.text">
            <tag name="twig.extension"/>
        </service>

        <service id="Shopware\Core\Framework\Twig\InstanceOfExtension">
            <tag name="twig.extension"/>
        </service>

        <service id="Shopware\Core\Framework\Routing\ApiRequestContextResolver">
            <argument type="service" id="Doctrine\DBAL\Connection"/>
        </service>

        <service id="Shopware\Core\Framework\Routing\SalesChannelRequestContextResolver"
                 decorates="Shopware\Core\Framework\Routing\ApiRequestContextResolver">
            <argument type="service" id="Shopware\Core\Framework\Routing\SalesChannelRequestContextResolver.inner"/>
            <argument type="service" id="Shopware\Core\Checkout\Context\CheckoutContextService"/>
        </service>

        <service id="Shopware\Core\Framework\Validation\CommandQueueValidator">
            <argument type="tagged" tag="shopware.validator"/>
        </service>

        <service id="Shopware\Core\Framework\Api\Controller\StorefrontProxyController" public="true">
            <argument type="service" id="kernel"/>
            <argument type="service" id="sales_channel.repository"/>
            <argument type="service" id="Shopware\Core\Framework\Routing\SalesChannelRequestContextResolver"/>
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <!-- Feature Flags -->
        <service id="Shopware\Core\Framework\FeatureFlag\FeatureFlagGenerator"/>
    </services>
</container>
